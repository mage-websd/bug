<?php $item = $this->getBanner(); ?>
<?php if (is_object($item)) : ?>
    <?php $_helper = $this->helper('icycle'); ?>
    <?php $_iHelper = $this->helper('icycle/image'); ?>
    <?php $suffix = md5(microtime() . mt_rand()) ?>
    <?php $_imageList = $item->getImageListForFrontend(); ?>
    <?php if (is_array($_imageList) and sizeof($_imageList) > 0) : ?>
        <?php
            $width = $item->getWidth() ? $item->getWidth() : 1366;
            $height = $item->getHeight() ? $item->getHeight() : 318;
        ?>

<div id="slideShowContainer" class="rotating-slider-container" style="width: <?php echo $width; ?>px; height: <?php echo $height; ?>px;">
    <div id="slideShow" class="rotating-slider rotating-slider-<?php echo $suffix; ?>" style="width: <?php echo $width; ?>px; height: <?php echo $height; ?>px;">
    	<ul>
            <?php foreach ($_imageList as &$_item): ?>
                <?php if ( $size = $_helper->getThumbSize($_item['file'], $width, $height) ) : ?>
                    <?php $thumb = $_iHelper->init($_item['file'])->resize($size->getWidth(), $size->getHeight()); ?>
                    <li>
                        <img src="<?php echo $thumb; ?>" width="100%"/>
                        <?php if (isset($_item['description'][0])) : ?>
                            <div class="icycle-description"><?php echo $_helper->parseText($_item['description']); ?></div>
                        <?php endif; ?>
                    </li>
                <?php endif; ?>
            <?php endforeach; ?>        	
        </ul>
    </div>
    <div class="slider-rotating-controller">
        <div class="controller-inner">
            <a class="rotating-prev rotating-prev-<?php echo $suffix; ?>" href="#"><span>Prev</span></a>
            <a class="rotating-next rotating-next-<?php echo $suffix; ?>" href="#"><span>Next</span></a>
        </div>
    </div>
</div>
<script type="text/javascript">
    jQuery(document).ready(function($) {
        $('.rotating-slider-<?php echo $suffix; ?>').rotatingSlider({
            width: <?php echo $width; ?>,
            height: <?php echo $height; ?>,
            marginLeft: 10,
            marginTop: 10,
            rotate: 360,
            prev: '.rotating-prev-<?php echo $suffix; ?>',
            next: '.rotating-next-<?php echo $suffix; ?>'
        });
    });
</script>
<?php endif; ?>
<?php endif; ?>

<script type="text/javascript">
    /*
 * rotate: A jQuery cssHooks adding a cross browser 'rotate' property to $.fn.css() and $.fn.animate()
 *
 * Copyright (c) 2010 Louis-Rémi Babé
 * Licensed under the MIT license.
 * 
 * This saved you an hour of work? 
 * Send me music http://www.amazon.fr/wishlist/HNTU0468LQON
 *
 */
(function($) {
  
var div = document.createElement('div'),
  divStyle = div.style,
  support = $.support;

support.transform = 
  divStyle.MozTransform === ''? 'MozTransform' :
  (divStyle.MsTransform === ''? 'MsTransform' :
  (divStyle.WebkitTransform === ''? 'WebkitTransform' : 
  (divStyle.OTransform === ''? 'OTransform' :
  false)));
support.matrixFilter = !support.transform && divStyle.filter === '';
div = null;

$.cssNumber.rotate = true;
$.cssHooks.rotate = {
  set: function( elem, value ) {
    var _support = support,
      supportTransform = _support.transform,
      cos, sin,
      centerOrigin;
    
    if (typeof value === 'string') {
      value = toRadian(value);
    }
    
    $.data( elem, 'transform', {
      rotate: value
    });
    
    if (supportTransform) {
      elem.style[supportTransform] = 'rotate('+ value +'rad)';
      
    } else if (_support.matrixFilter) {
      cos = Math.cos(value);
      sin = Math.sin(value);
      elem.style.filter = [
        "progid:DXImageTransform.Microsoft.Matrix(",
          "M11="+cos+",",
          "M12="+(-sin)+",",
          "M21="+sin+",",
          "M22="+cos+",",
          "SizingMethod='auto expand'",
        ")"
      ].join('');
      
      // From pbakaus's Transformie http://github.com/pbakaus/transformie
      if(centerOrigin = $.rotate.centerOrigin) {
        elem.style[centerOrigin == 'margin' ? 'marginLeft' : 'left'] = -(elem.offsetWidth/2) + (elem.clientWidth/2) + "px";
        elem.style[centerOrigin == 'margin' ? 'marginTop' : 'top'] = -(elem.offsetHeight/2) + (elem.clientHeight/2) + "px";
      }
    }
  },
  get: function( elem, computed ) {
    var transform = $.data( elem, 'transform' );
    return transform && transform.rotate? transform.rotate : 0;
  }
};
$.fx.step.rotate = function( fx ) {
  $.cssHooks.rotate.set( fx.elem, fx.now+fx.unit );
};

function radToDeg( rad ) {
  return rad * 180 / Math.PI;
}
function toRadian(value) {
  if(value.indexOf("deg") != -1) {
    return parseInt(value,10) * (Math.PI * 2 / 360);
  } else if (value.indexOf("grad") != -1) {
    return parseInt(value,10) * (Math.PI/200);
  }
  return parseFloat(value);
}

$.rotate = {
  centerOrigin: 'margin',
  radToDeg: radToDeg
};
  
})(jQuery);
    (function($){
    $.fn.rotatingSlider = function(object) {
        if(object == undefined) {
            object = {};
        }
        var slideShow = $(this),
        ul = slideShow.find('ul'),
        li = ul.find('li'),
        cnt = li.length;
        if(object.width == undefined) {
            object.width = 1366;
        }
        if(object.height == undefined) {
            object.height = 318;
        }
        if(object.marginTop == undefined) {
            object.marginTop = 10;
        }
        if(object.marginLeft == undefined) {
            object.marginLeft = 10;
        }
        if(object.prev == undefined) {
            object.prev = '.rotating-prev';
        }
        if(object.next == undefined) {
            object.next = '.rotating-next';
        }
        if(object.rotate == undefined) {
            object.rotate = 90;
        }
        // As the images are positioned absolutely, the last image will be shown on top.
        // This is why we force them in the correct order by assigning z-indexes:
        // This function updates the z-index properties.
        function updateZindex(){
            // The CSS method can take a function as its second argument.
            // i is the zero-based index of the element.
            ul.find('li').css('z-index',function(i){
                return cnt-i;
            });
        }
        updateZindex();
        if($.support.transform){        
            // Modern browsers with support for css3 transformations        
            li.find('img').css('rotate',function(i){
                // Rotating the images counterclockwise
                return (-object.rotate*i) + 'deg';
            });     
            // Binding a custom event. the direction and degrees parameters
            // are passed when the event is triggered later on in the code.     
            slideShow.bind('rotateContainer',function(e,direction,degrees){             
                // Enlarging the slideshow and photo:               
                slideShow.animate({
                    width       : object.width,
                    height      : object.height,
                    marginTop   : 0,
                    marginLeft  : 0
                },'fast',function(){
                    if(direction == 'next'){
                        // Moving the topmost image containing Li at
                        // the bottom after a fadeOut animation
                        ul.find('li').first().fadeOut('slow',function(){
                            $(this).remove().appendTo(ul);
                            updateZindex();
                            ul.find('li').first().fadeIn('slow');
                        });
                    }
                    else {
                        // Showing the bottomost Li element on top 
                        // with a fade in animation. Notice that we are
                        // updating the z-indexes.
                        ul.find('li').last().fadeOut('slow',function(){
                            $(this).remove().prependTo(ul);
                            updateZindex();
                            ul.find('li').first().fadeIn('slow');
                        });

                        /*var liLast = li.last().hide().remove().prependTo(ul);
                        updateZindex();
                        liLast.fadeIn('slow');*/
                    }
                    
                    // Rotating the slideShow. css('rotate') gives us the
                    // current rotation in radians. We are converting it to
                    // degress so we can add 90 or -90 to rotate it to its new value.
                    
                    slideShow.animate({             
                        rotate:Math.round($.rotate.radToDeg(slideShow.css('rotate'))+degrees) + 'deg'
                    },'slow').animate({
                        width       : object.width,
                        height      : object.height,
                        marginTop   : object.marginTop,
                        marginLeft  : object.marginLeft
                    },'fast');
                });
            });
            // By triggering the custom events below, we can 
            // show the previous / next images in the slideshow.
            slideShow.bind('showNext',function(){
                slideShow.trigger('rotateContainer',['next',object.rotate]);
            });
            slideShow.bind('showPrevious',function(){
                slideShow.trigger('rotateContainer',['previous',-object.rotate]);
            });
        }
        else{ //ie
            // Fallback for Internet Explorer and older browsers
            slideShow.bind('showNext',function(){
                ul.find('li').first().fadeOut('slow',function(){
                    $(this).remove().appendTo(ul).show();
                    updateZindex();
                });
            });
            slideShow.bind('showPrevious',function(){
                var liLast = ul.find('li').last().hide().remove().prependTo(ul);
                updateZindex();
                liLast.fadeIn('slow');
            });
        }
        // Listening for clicks on the arrows, and
        // triggering the appropriate event.
        $(document).on('click',object.prev,function(){
            if(slideShow.is(':animated')){
                return false;
            }
            slideShow.trigger('showPrevious');
            return false;
        });
        
        $(document).on('click',object.next,function(){
            if(slideShow.is(':animated')){
                return false;
            }
            slideShow.trigger('showNext');
            return false;
        });
    };
})(jQuery);
</script>