<?php
    function getSale($productIdFilter = null) {
        $storeId = Mage::app()->getStore()->getId();
        $websiteId = Mage::app()->getStore($storeId)->getWebsiteId();
        $custGroup = Mage::getSingleton('customer/session')->getCustomerGroupId();
        $product = Mage::getModel('catalog/product');
        $todayDate = $product->getResource()->formatDate(time(), false);
        $rulePriceWhere = "({{table}}.rule_date is null) or " . "({{table}}.rule_date='$todayDate' and " . "{{table}}.website_id='$websiteId' and " . "{{table}}.customer_group_id='$custGroup')";
        $specials = $product->setStoreId($storeId)->getResourceCollection()->addAttributeToFilter('special_price', array('gt' => 0), 'left')->addAttributeToFilter('special_from_date', array('date' => true, 'to' => $todayDate), 'left')->addAttributeToFilter(array(array('attribute' => 'special_to_date', 'date' => true, 'from' => $todayDate), array('attribute' => 'special_to_date', 'is' => new Zend_Db_Expr('null'))), '', 'left')->addAttributeToSort('special_from_date', 'desc')->joinTable('catalogrule/rule_product_price', 'product_id=entity_id', array('rule_price' => 'rule_price', 'rule_start_date' => 'latest_start_date', 'rule_date' => 'rule_date', 'rule_end_date' => 'earliest_end_date'), $rulePriceWhere, 'left');
        if ($productIdFilter) {
            $specials = $specials->addAttributeToFilter('entity_id', $productIdFilter);
        }
        $rulePriceCollection = Mage::getResourceModel('catalogrule/rule_product_price_collection')->addFieldToFilter('website_id', $websiteId)->addFieldToFilter('customer_group_id', $custGroup)->addFieldToFilter('rule_date', $todayDate);
        $productIds = $rulePriceCollection->getProductIds();
        if (!empty($productIds)) {
            $specials->getSelect()->orWhere('e.entity_id in (' . implode(',', $productIds) . ')');
        }
        $specials->addAttributeToSelect(Mage::getSingleton('catalog/config')->getProductAttributes())
        ->addMinimalPrice()->addFinalPrice()->addTaxPercents();

        //->addUrlRewrite($this->getCurrentCategory()->getId());
        Mage::getSingleton('catalog/product_status')->addVisibleFilterToCollection($specials);
        Mage::getSingleton('catalog/product_visibility')->addVisibleInCatalogFilterToCollection($specials);

        //$this->prepareProductCollection($specials);
        if ($productIdFilter) {
          foreach ($specials as $special) {
            if($special->getData('entity_id') == $productIdFilter) {
              return $special;
            }
          }
          return null;
        }
        return $specials;
    }

    function getTimestampUtil($product)
    {
        if (is_object($product)) {
            $product = $product->getId();
        }
        $product = getSale($product);
        if(!$product || !$product->getId()) {
          return null;
        }
        $dateTimeCurrent = Mage::getModel('core/date')->date('Y-m-d H:i:s');
        $dateTimeStart = $product->getData('special_from_date');
        $dateTimeEnd = $product->getData('special_to_date');
        $dataTimeEndRule = $product->getData('rule_end_date');
        if (!$dateTimeEnd && !$dataTimeEndRule) {
            //return null;
            $dateTimeEnd = Mage::getModel('core/date')->date('Y-m-d');
            $dateTimeEnd .= ' 23:59:59';
        }
        $timestampCurrent = strtotime($dateTimeCurrent);
        if($dataTimeEndRule) {
          $timestampEnd = strtotime($dataTimeEndRule);
        }
        else {
          $timestampEnd = strtotime($dateTimeEnd);
          $timestampStart = strtotime($dateTimeStart);
          if ($timestampCurrent <= $timestampStart || $timestampCurrent >= $timestampEnd) {
              return null;
          }
        }
        $timestampUtil = $timestampEnd - $timestampCurrent;
        return $timestampUtil;
    }
?>

<div class="ps-countdown time-countdown" data-timeutil="<?php echo $timestampUtil; ?>">
</div>

<script type="text/javascript">
	jQuery(document).ready(function($) {
		function getCountdownHtml(day,hours,minutes,seconds)
		{
			var html = '' +
				'<span class="cd-day">'+
					'<span class="cd-number">'+day+'</span>'+
					'<span class="cd-text">days</span>'+
				'</span>'+
				'<span>:</span>'+
				'<span class="cd-hour">'+
					'<span class="cd-number">'+hours+'</span>'+
					'<span class="cd-text">hrs</span>'+
				'</span>'+
				'<span>:</span>'+
				'<span class="cd-min">'+
					'<span class="cd-number">'+minutes+'</span>'+
					'<span class="cd-text">mins</span>'+
				'</span>'+
				'<span>:</span>'+
				'<span class="cd-sec">'+
					'<span class="cd-number">'+seconds+'</span>'+
					'<span class="cd-text">secs</span>'+
				'</span>';
			return html;
		}
		function actionCountDown(domClass)
		{
			var timestampUtil = $(domClass).data('timeutil');
			var timeUtil = '';
			var intervalCountdown = setInterval(function() {
				--timestampUtil;
				if(timestampUtil < 0) {
					//$(domClass).remove();
					clearInterval(intervalCountdown);
				}
				else {
					timeUtil = timestampUtil;
					day = Math.floor(timeUtil/60/60/24);
					hoursUtil = timeUtil - day*24*60*60;
					hours = Math.floor(hoursUtil/60/60);
					minutesUtil = hoursUtil - hours*60*60;
					minutes = Math.floor(minutesUtil/60);
					seconds = minutesUtil - minutes * 60;
					$(domClass).html(getCountdownHtml(day,hours,minutes,seconds));
				}
			},1000);
		}
		actionCountDown('.time-countdown.ps-countdown');
	});
</script>
