1. View review
    echo $this->getLayout()->createBlock('review/helper')->getSummaryHtml($product, 'short',false);

    echo $this->getReviewsSummaryHtml($p,'short'); // catalog/product/abstract

2. get attribute value of product: $_product->getResource()->getAttribute('brand_name')->getFrontend()->getValue($_product);
3. get category level 2:
	$path = $category->getPath();
    $ids = explode('/', $path);
    if(isset($ids[2])) {//category level 2 id}
4. change label configruation option
		Product.ConfigDefaultText = new Class.create(Product.Config, {
            fillSelect: function (element) {
                var attributeId = element.id.replace(/[a-z]*/, '');
                var options = this.getAttributeOptions(attributeId);
                this.clearSelect(element);
                element.options[0] = new Option('', '');
                element.options[0].innerHTML = element.config.label;

                var prevConfig = false;
                if (element.prevSetting) {
                    prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];
                }

                if (options) {
                    var index = 1;
                    for (var i = 0; i < options.length; i++) {
                        var allowedProducts = [];
                        if (prevConfig) {
                            for (var j = 0; j < options[i].products.length; j++) {
                                if (prevConfig.config.allowedProducts
                                    && prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1) {
                                    allowedProducts.push(options[i].products[j]);
                                }
                            }
                        } else {
                            allowedProducts = options[i].products.clone();
                        }

                        if (allowedProducts.size() > 0) {
                            options[i].allowedProducts = allowedProducts;
                            element.options[index] = new Option(this.getOptionLabel(options[i], options[i].price), options[i].id);
                            element.options[index].config = options[i];
                            index++;
                        }
                    }
                }
            }
        });
        var spConfig = new Product.ConfigDefaultText(<?php echo $this->getJsonConfig() ?>);
5.
    translate text variable
    $processor = Mage::getSingleton('core/email_template_filter');
    echo $processor->filter($textTranslate);
6. get product
$productCollection = Mage::getResourceModel('catalog/product_collection');
            $layer = Mage::getSingleton('catalog/layer');
            $layer->prepareProductCollection($productCollection);
            $loadedCollection = $productCollection
            ->setOrder('min_price','DESC')
            ->getSelect()->setPart('order',$a)
            ->query()->fetchAll();
7. current category
if(!Mage::registry('current_category')) {
            $_storeId = Mage::app()->getStore()->getStoreId();
            $_categoryCurrentId = Mage::app()->getRequest()->getParam('category');
            if($_categoryCurrentId) {
                Mage::register('current_category',Mage::getModel('catalog/category')->load($_categoryCurrentId));
            }
            else {
                $_product = Mage::registry('current_product');
                if($_product) {
                    $_category = $_product->getCategoryIds();
                    $_category = Mage::getModel('catalog/category')->setStoreId($_storeId)->load($_category[0]);
                    if($_category->getId()) {
                        Mage::register('current_category',$_category);
                    }
                }
            }
        }
        if(!Mage::registry('current_category')) {
            $_category = Mage::app()->getStore()->getRootCategoryId();
            $_category = Mage::getModel('catalog/category')->load($_category);
            Mage::register('current_category',$_category);
        }